{"version":3,"file":"static/js/677.5d277258.chunk.js","mappings":"sIAEO,MAAMA,EAAgBC,IACpBC,EAAAA,EAAAA,GAAQ,CACbC,QAAS,MACTC,IAAK,iBACLH,U,wHCCJ,SAASI,IACP,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,GAG3BK,EAAWA,KACf,MAAMZ,EAAS,CACba,KAAM,QACNH,OACAI,KAAM,IAEJN,IACJC,GAAa,IACbV,EAAAA,EAAAA,GAAaC,GACVe,MAAMC,IACLV,GAAUW,GAAc,IAAIA,KAAcD,EAAQE,OAAOC,QACzDR,GAASS,GAAaA,EAAW,IACjCX,GAAa,EAAM,IAEpBY,OAAOC,IAENb,GAAa,EAAM,IACnB,EAsBN,OAnBAc,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeA,KACnB,MAAM,UAAEC,EAAS,aAAEC,EAAY,aAAEC,GAC/BC,SAASC,gBACPF,EAAeF,EAAYC,EAAe,KAC5Cd,GACF,EAKF,OAFAkB,OAAOC,iBAAiB,SAAUP,GAE3B,KACLM,OAAOE,oBAAoB,SAAUR,EAAa,CACnD,GACA,CAAChB,EAAWH,KAEfkB,EAAAA,EAAAA,YAAU,KACRX,GAAU,GACT,KAEDqB,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,MAAO,QAASC,UACjDJ,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,QAAQ,UAAUC,KAAM,EAAGC,IAAK,EAAEJ,UAC3CJ,EAAAA,EAAAA,KAACS,EAAAA,EAAMC,aAAY,CACjBC,QAAS,CACPC,aAAcA,IAAMjB,SAASkB,eAAe,SAC5CT,SAEDhC,EAAM0C,KAAI,CAACC,EAAMC,KAChBC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAd,SAAA,EACZJ,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJU,OAAM,GAAAC,OAAKL,EAAK7C,KAChBmD,IAAG,GAAAD,OAAKL,EAAK7C,KACboD,IAAKP,EAAKQ,MACVC,QAAQ,OACRC,aAAW,KAEbzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAgB,CAACC,SAAS,MAAMJ,MAAOR,EAAKQ,UAR3BP,UAehC,CAEA,MACA,EADyBY,EAAAA,KAAWzD,GChEpC,EAVa0D,KAETZ,EAAAA,EAAAA,MAAA,OAAAb,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAE6B,aAAc,QAAS1B,SAAC,yBAErCJ,EAAAA,EAAAA,KAAC+B,EAAgB,M,gDCNvB,MAAMC,E,QAAgBC,EAAMC,OAAO,CAEjCC,QAASC,0BACTC,QAAS,MAGXL,EAAcM,aAAatE,QAAQuE,KAChCC,IACMA,EAAOC,OACVD,EAAOC,KAAO,CAAC,GAEjB,MAAMC,GAAQC,EAAAA,EAAAA,IAAS,SAIvB,OAHID,IACFF,EAAOI,QAAQF,MAAQA,GAElBF,CAAM,IAEdnD,GACQwD,QAAQC,OAAOzD,KAI1B2C,EAAcM,aAAaS,SAASR,KACjCQ,IACC,MAAM,OAAEC,EAAM,KAAEP,GAASM,EACzB,OAAe,MAAXC,EACKP,EAEAI,QAAQC,OAAOL,EACxB,IAEDpD,GACQwD,QAAQC,OAAOzD,KAI1B,S","sources":["api/getImages.js","pages/Home/components/Wallpaper/index.js","pages/Home/index.js","request/index.js"],"sourcesContent":["import request from '@/request/index';\n\nexport const getImageList = (params) => {\n  return request({\n    methods: 'get',\n    url: '/api/getImages',\n    params,\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport { getImageList } from '@/api/getImages';\nimport { Image } from 'antd';\n\nfunction ImageMasonry() {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n\n  // 加载更多数据\n  const loadMore = () => {\n    const params = {\n      type: 'comic',\n      page,\n      size: 20,\n    };\n    if (isLoading) return;\n    setIsLoading(true);\n    getImageList(params)\n      .then((newData) => {\n        setItems((prevItems) => [...prevItems, ...newData.result.list]);\n        setPage((prevPage) => prevPage + 1);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n      });\n  };\n  // 监听滚动事件，加载更多\n  useEffect(() => {\n    const handleScroll = () => {\n      const { scrollTop, clientHeight, scrollHeight } =\n        document.documentElement;\n      if (scrollHeight - scrollTop - clientHeight < 300) {\n        loadMore();\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [isLoading, items]);\n  // 初始加载数据\n  useEffect(() => {\n    loadMore();\n  }, []);\n  return (\n    <div style={{ textAlign: 'center', width: '100%' }}>\n      <ImageList variant='masonry' cols={3} gap={8}>\n        <Image.PreviewGroup\n          preview={{\n            getContainer: () => document.getElementById('root'),\n          }}\n        >\n          {items.map((item, index) => (\n            <ImageListItem key={index}>\n              <Image\n                srcSet={`${item.url}`}\n                src={`${item.url}`}\n                alt={item.title}\n                loading='lazy'\n                placeholder\n              />\n              <ImageListItemBar position='top' title={item.title} />\n            </ImageListItem>\n          ))}\n        </Image.PreviewGroup>\n      </ImageList>\n    </div>\n  );\n}\n\nconst ImageMasonryMemo = React.memo(ImageMasonry);\nexport default ImageMasonryMemo;\n","import React from 'react';\n// import WaterfallFlow from '@/pages/Home/components/WaterfallFlow';\nimport ImageMasonryMemo from '@/pages/Home/components/Wallpaper';\n\nconst Home = () => {\n  return (\n    <div>\n      <h1 style={{ marginBottom: '10px' }}>Beautiful wallpaper</h1>\n      {/* <WaterfallFlow /> */}\n      <ImageMasonryMemo />\n    </div>\n  );\n};\n\nexport default Home;\n","import { getCache } from '@/utils/tokenStorage';\nimport axios from 'axios';\n\nconst axiosInstance = axios.create({\n  // 动态设置请求地址\n  baseURL: process.env.REACT_APP_BASE_URL,\n  timeout: 5000, // 设置超时时间\n});\n// 请求拦截器\naxiosInstance.interceptors.request.use(\n  (config) => {\n    if (!config.data) {\n      config.data = {};\n    }\n    const token = getCache('token');\n    if (token) {\n      config.headers.token = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n// 响应拦截器\naxiosInstance.interceptors.response.use(\n  (response) => {\n    const { status, data } = response;\n    if (status === 200) {\n      return data;\n    } else {\n      return Promise.reject(data);\n    }\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\nexport default axiosInstance;\n"],"names":["getImageList","params","request","methods","url","ImageMasonry","items","setItems","useState","isLoading","setIsLoading","page","setPage","loadMore","type","size","then","newData","prevItems","result","list","prevPage","catch","error","useEffect","handleScroll","scrollTop","clientHeight","scrollHeight","document","documentElement","window","addEventListener","removeEventListener","_jsx","style","textAlign","width","children","ImageList","variant","cols","gap","Image","PreviewGroup","preview","getContainer","getElementById","map","item","index","_jsxs","ImageListItem","srcSet","concat","src","alt","title","loading","placeholder","ImageListItemBar","position","React","Home","marginBottom","ImageMasonryMemo","axiosInstance","axios","create","baseURL","process","timeout","interceptors","use","config","data","token","getCache","headers","Promise","reject","response","status"],"sourceRoot":""}