{"version":3,"file":"static/js/629.f69bee85.chunk.js","mappings":"sIAEO,MAAMA,EAAgBC,IACpBC,EAAAA,EAAAA,GAAQ,CACbC,QAAS,MACTC,IAAK,iBACLH,U,iFCLJ,SAAgB,UAAY,yBAAyB,iBAAmB,gCAAgC,SAAW,wBAAwB,wBAA0B,uCAAuC,0BAA4B,0C,aCIxO,MA+DA,EA/DoBI,KAClB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,IAAQD,EAAAA,EAAAA,UAASE,KAAKC,KAAqB,GAAhBD,KAAKE,YAEhCC,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,IAcrCO,EAZW,CACf,SACA,SACA,MACA,QACA,OACA,OACA,QACA,SACA,QACA,WAEoBL,KAAKM,MAAsB,GAAhBN,KAAKE,WAgBtC,OAfAK,EAAAA,EAAAA,YAAU,KACR,MAAMhB,EAAS,CACbc,OACAN,OACAS,KAAM,KAERlB,EAAAA,EAAAA,GAAaC,GAAQkB,MAAMC,IACzBb,EAAaa,EAAIC,OAAOC,MAExB,MAAMC,EAAeH,EAAIC,OAAOC,KAAKE,KACnC,IAAMd,KAAKC,KAAqB,GAAhBD,KAAKE,UAAiB,IAExCE,EAAaS,EAAa,GAC1B,GACD,KAEDE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,UAAUC,UAC/BJ,EAAAA,EAAAA,KAACK,EAAAA,EAAMC,aAAY,CACjBC,QAAS,CACPC,aAAcA,IAAMC,SAASC,eAAe,SAC5CN,SAEDvB,EAAUkB,KAAI,CAACY,EAAMC,KACpBZ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOW,iBAAiBT,UACtCJ,EAAAA,EAAAA,KAAA,OACEC,UAAS,GAAAa,OAAKZ,EAAOa,SAAQ,KAAAD,OAAIZ,EAAOc,KACxCC,MAAO,CAAEC,UAAU,UAADJ,OAAY1B,EAAUwB,GAAM,SAAUR,UAExDe,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAOkB,kBAAkBhB,SAAA,EACvCJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOmB,wBAAwBjB,UAC7CJ,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACiB,IAAKX,EAAKhC,IAAK4C,IAAKZ,EAAKa,MAAOC,QAAQ,YAEjDzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOwB,0BAA0BtB,UAC/CJ,EAAAA,EAAAA,KAAA,KAAAI,SAAIO,EAAKa,gBAV6Bb,EAAKgB,SAiBnD,C,gDC7DV,MAAMC,E,QAAgBC,EAAMC,OAAO,CAEjCC,QAASC,0BACTC,QAAS,MAGXL,EAAcM,aAAazD,QAAQ0D,KAChCC,IACMA,EAAOC,OACVD,EAAOC,KAAO,CAAC,GAEjB,MAAMC,GAAQC,EAAAA,EAAAA,IAAS,SAIvB,OAHID,IACFF,EAAOI,QAAQF,MAAQA,GAElBF,CAAM,IAEdK,GACQC,QAAQC,OAAOF,KAI1Bb,EAAcM,aAAaU,SAAST,KACjCS,IACC,MAAM,OAAEC,EAAM,KAAER,GAASO,EACzB,OAAe,MAAXC,EACKR,EAEAK,QAAQC,OAAON,EACxB,IAEDI,GACQC,QAAQC,OAAOF,KAI1B,S","sources":["api/getImages.js","webpack://antd-myapp/./src/pages/ImageSlider/index.module.less?6032","pages/ImageSlider/index.js","request/index.js"],"sourcesContent":["import request from '@/request/index';\n\nexport const getImageList = (params) => {\n  return request({\n    methods: 'get',\n    url: '/api/getImages',\n    params,\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index_container__9IZVl\",\"container__items\":\"index_container__items__FxOHW\",\"polaroid\":\"index_polaroid__rT735\",\"polaroid__content_image\":\"index_polaroid__content_image__b5oeV\",\"polaroid__content_caption\":\"index_polaroid__content_caption__sDhqc\"};","import React, { useEffect, useState } from 'react';\nimport { Image } from 'antd';\nimport { getImageList } from '@/api/getImages';\nimport styles from './index.module.less';\n\nconst ImageSlider = () => {\n  const [imageList, setImageList] = useState([]);\n  const [page] = useState(Math.ceil(Math.random() * 10));\n  // 用于存储每个图片的旋转角度\n  const [rotations, setRotations] = useState([]);\n  // 随机图片type\n  const typeList = [\n    'animal',\n    'beauty',\n    'car',\n    'comic',\n    'food',\n    'game',\n    'movie',\n    'person',\n    'phone',\n    'scenery',\n  ];\n  const type = typeList[Math.floor(Math.random() * 10)];\n  useEffect(() => {\n    const params = {\n      type,\n      page,\n      size: 15,\n    };\n    getImageList(params).then((res) => {\n      setImageList(res.result.list);\n      // 为每个图片生成一个随机旋转角度，并更新 rotations 状态\n      const newRotations = res.result.list.map(\n        () => Math.ceil(Math.random() * 10) - 5,\n      );\n      setRotations(newRotations);\n    });\n  }, []);\n  return (\n    <div className={styles.container}>\n      <Image.PreviewGroup\n        preview={{\n          getContainer: () => document.getElementById('root'),\n        }}\n      >\n        {imageList.map((item, index) => (\n          <div className={styles.container__items} key={item.id}>\n            <div\n              className={`${styles.polaroid} ${styles.one}`}\n              style={{ transform: `rotate(${rotations[index]}deg)` }} // 应用旋转角度\n            >\n              <div className={styles.polaroid__content}>\n                <div className={styles.polaroid__content_image}>\n                  <Image src={item.url} alt={item.title} loading='lazy' />\n                </div>\n                <div className={styles.polaroid__content_caption}>\n                  <p>{item.title}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </Image.PreviewGroup>\n    </div>\n  );\n};\n\nexport default ImageSlider;\n","import { getCache } from '@/utils/tokenStorage';\nimport axios from 'axios';\n\nconst axiosInstance = axios.create({\n  // 动态设置请求地址\n  baseURL: process.env.REACT_APP_BASE_URL,\n  timeout: 5000, // 设置超时时间\n});\n// 请求拦截器\naxiosInstance.interceptors.request.use(\n  (config) => {\n    if (!config.data) {\n      config.data = {};\n    }\n    const token = getCache('token');\n    if (token) {\n      config.headers.token = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n// 响应拦截器\naxiosInstance.interceptors.response.use(\n  (response) => {\n    const { status, data } = response;\n    if (status === 200) {\n      return data;\n    } else {\n      return Promise.reject(data);\n    }\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\nexport default axiosInstance;\n"],"names":["getImageList","params","request","methods","url","ImageSlider","imageList","setImageList","useState","page","Math","ceil","random","rotations","setRotations","type","floor","useEffect","size","then","res","result","list","newRotations","map","_jsx","className","styles","container","children","Image","PreviewGroup","preview","getContainer","document","getElementById","item","index","container__items","concat","polaroid","one","style","transform","_jsxs","polaroid__content","polaroid__content_image","src","alt","title","loading","polaroid__content_caption","id","axiosInstance","axios","create","baseURL","process","timeout","interceptors","use","config","data","token","getCache","headers","error","Promise","reject","response","status"],"sourceRoot":""}